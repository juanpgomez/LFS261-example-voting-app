pipeline {
  agent none

  stages {
    stage(build) {
      when {
	      changeset "**/result/**"
      }

      agent {
        docker {
          image 'node:19.0.1-alpine'
          args '-v $HOME/node_modules/root/node_modules'
        }
      }

      steps {
	      echo 'Compiling result app...'
	      dir('result') {
	        sh 'npm install'
	      }
      }
    }

    stage(test) {
      when {
	      changeset "**/result/**"
      }

      agent {
        docker {
          image 'node:19.0.1-alpine'
          args '-v $HOME/node_modules/root/node_modules'
        }
      }
      
      steps {
	      echo 'Running Unit Tests on result app...'
	      dir('result') {
          sh 'npm install'
          sh 'npm test'
	      }
      }
    }

    stage('docker-package') {
      agent any

      when {
        changeset "**/result/**"
        branch 'master'
      }
      
      steps { 
        echo 'Packaging result app with docker'
        script {
          docker.withRegistry('https://index.docker.io/v1/','dockerlogin') {  
            def workerImage = docker.build("juanpblgomez/result:v${env.BUILD_ID}", "./result")
                              workerImage.push()
                              workerImage.push("${env.BRANCH_NAME}")
                              workerImage.push("latest")
          }
        }
      }
    }
  }

  post {
    always {
      echo 'Building multibranch pipeline for worker is completed..'
    }
  }
}
